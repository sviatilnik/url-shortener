// Code generated by MockGen. DO NOT EDIT.
// Source: env_config_provider.go

// Package mock_config is a generated GoMock package.
package mock_config

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockEnvGetter is a mock of EnvGetter interface.
type MockEnvGetter struct {
	ctrl     *gomock.Controller
	recorder *MockEnvGetterMockRecorder
}

// MockEnvGetterMockRecorder is the mock recorder for MockEnvGetter.
type MockEnvGetterMockRecorder struct {
	mock *MockEnvGetter
}

// NewMockEnvGetter creates a new mock instance.
func NewMockEnvGetter(ctrl *gomock.Controller) *MockEnvGetter {
	mock := &MockEnvGetter{ctrl: ctrl}
	mock.recorder = &MockEnvGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEnvGetter) EXPECT() *MockEnvGetterMockRecorder {
	return m.recorder
}

// LookupEnv mocks base method.
func (m *MockEnvGetter) LookupEnv(key string) (string, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LookupEnv", key)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// LookupEnv indicates an expected call of LookupEnv.
func (mr *MockEnvGetterMockRecorder) LookupEnv(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LookupEnv", reflect.TypeOf((*MockEnvGetter)(nil).LookupEnv), key)
}